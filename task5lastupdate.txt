
@model List<task5.Models.Details>

@{
    ViewBag.Title = "GetDetails";
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
}

<h2>GetDetails</h2>
@Html.ActionLink("Create", "Index")

@TempData["Success"]

<div class="container">
    <div class="row">
        <div class="col-md-6 col-lg-4 mx-auto">
            <div class="form-group">
                <label for="searchName">Search by Name:</label>
                <input type="text" class="form-control" id="searchName" placeholder="Enter name">
            </div>
            <div class="form-group">
                <label for="startDate">Start Date:</label>
                <input type="date" class="form-control" id="startDate">
                <div class="error" id="startDateError"></div>
            </div>
            <div class="form-group">
                <label for="endDate">End Date:</label>
                <input type="date" class="form-control" id="endDate">
                <div class="error" id="endDateError"></div>
            </div>
        </div>
    </div>
    <div id="results" class="mt-3"></div>
</div>

<h4>States</h4>
<div class="state-container">
    @foreach (var state in ViewBag.States)
    {
        <div class="state-item">
            <label class="state-label">
                <input type="checkbox" class="state-checkbox" value="@state.StateName" /> @state.StateName
            </label>
        </div>
        <div class="city-container" id="city-container-@state.StateName" style="display:none; margin-left: 20px;">
            <!-- Cities will be populated here via AJAX -->
        </div>
    }
</div>

<div class="container mt-4" id="tb">
    <div class="gridContainer">
        <div id="grid"></div>
        <table class="table table-bordered table-striped" style="width: 100%;">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Mobile</th>
                    <th>State</th>
                    <th>City</th>
                    <th>Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.Name</td>
                        <td>@user.Email</td>
                        <td>@user.Mobile</td>
                        <td>@user.StateName</td>
                        <td>@user.CityName</td>
                        <td>@user.CreatedOn.ToString("dd/MM/yyyy")</td>
                        <td>
                            <a href="@Url.Action("Edit", new { id = user.Id })" class="btn btn-warning btn-sm" title="Edit">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(@user.Id)">
                                <i class="bi bi-trash3-fill"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="pagination-container">
        <div id="pagination"></div>
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-end">
                @if (ViewBag.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="loadPage(@(ViewBag.CurrentPage - 1))" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="#" onclick="loadPage(@i)">@i</a>
                    </li>
                }

                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="loadPage(@(ViewBag.CurrentPage + 1))" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
<style>
    .error {
        color: red;
        font-size: 0.875em;
        margin-top: 0.25em;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
   $(document).ready(function () {
    $('.state-checkbox').on('change', function () {
        var selectedStates = $('.state-checkbox:checked').map(function () {
            return $(this).val();
        }).get().join(',');

        $.ajax({
            url: '@Url.Action("GetCitiesByStates", "Details")',
            type: 'GET',
            data: { stateNames: selectedStates },
            success: function (data) {
                $('.city-container').hide();
                $.each(data, function (index, cityGroup) {
                    var cityContainer = $('#city-container-' + cityGroup.StateName);
                    var checkedCities = cityContainer.find('.city-checkbox:checked').map(function () {
                        return $(this).val();
                    }).get();
                    cityContainer.empty();
                    $.each(cityGroup.Cities, function (index, city) {
                        cityContainer.append(
                            '<label>' +
                                '<input type="checkbox" class="city-checkbox" value="' + city + '" ' + (checkedCities.includes(city) ? 'checked' : '') + ' /> ' + city +
                            '</label><br />'
                        );
                    });
                    cityContainer.show();
                });
                updateCityCheckboxes();
            },
            error: function (xhr, status, error) {
                alert("An error occurred: " + error);
            }
        });
    });

    $(document).on('change', '.city-checkbox', function () {
        updateCityCheckboxes();
    });

    $('#searchName, #startDate, #endDate').on('input change', function () {
        validateDates();
        updateCityCheckboxes();
    });

    function validateDates() {
        var startDate = new Date($('#startDate').val());
        var endDate = new Date($('#endDate').val());

        $('#startDateError').text('');
        $('#endDateError').text('');

        if (startDate && endDate && startDate > endDate) {
            $('#startDateError').text('Start Date cannot be after End Date.');
            $('#endDateError').text('End Date cannot be before Start Date.');
            return false;
        }

        return true;
    }

    function formatDate(dateString) {
        var timestamp = parseInt(dateString.replace(/\/Date\((\d+)\)\//, '$1'));
        var date = new Date(timestamp);
        var day = ("0" + date.getDate()).slice(-2);
        var month = ("0" + (date.getMonth() + 1)).slice(-2);
        var year = date.getFullYear();
        return day + '-' + month + '-' + year;
    }

     @*  function updateCityCheckboxes(pageNumber = 1, pageSize = 3) {
           console.log(pageNumber);
        if (!validateDates()) return;

        var selectedCities = $('.city-checkbox:checked').map(function () {
            return $(this).val();
        }).get().join(',');

        var searchString = $('#searchName').val();
        var startDate = $('#startDate').val();
        var endDate = $('#endDate').val();

        $.ajax({
            url: '@Url.Action("GetDetails", "Details")',
            type: 'GET',
            data: {
                cityNames: selectedCities,
                searchString: searchString,
                startDate: startDate,
                endDate: endDate,
                pageNumber: pageNumber,
                pageSize: pageSize
            },
            success: function (response) {
                var gridContainer = $('table tbody');
                gridContainer.empty();

                $.each(response.Det, function (index, detail) {
                    gridContainer.append(
                        '<tr>' +
                            '<td>' + detail.Name + '</td>' +
                            '<td>' + detail.Email + '</td>' +
                            '<td>' + detail.Mobile + '</td>' +
                            '<td>' + detail.StateName + '</td>' +
                            '<td>' + detail.CityName + '</td>' +
                            '<td>' + formatDate(detail.CreatedOn) + '</td>' +
                            '<td>' +
                                '<a href="/Details/Edit/' + detail.Id + '" class="btn btn-warning btn-sm" title="Edit">' +
                                    '<i class="bi bi-pencil"></i>' +
                                '</a>' +
                                '<button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(' + detail.Id + ')">' +
                                    '<i class="bi bi-trash3-fill"></i>' +
                                '</button>' +
                            '</td>' +
                        '</tr>'
                    );
                });

                updatePagination(response.CurrentPage, response.TotalPages);
            },
            error: function (xhr, status, error) {
                alert("An error occurred: " + error);
            }
        });
    }*@

       function updatePagination(currentPage, totalPages) {

        var paginationContainer = $('.pagination');
        paginationContainer.empty();

        if (currentPage > 1) {
            paginationContainer.append(
                '<li class="page-item">' +
                    '<a class="page-link" href="javascript:void(0);" onclick="loadPage(' + (currentPage - 1) + ')" aria-label="Previous">' +
                        '<span aria-hidden="true">&laquo;</span>' +
                    '</a>' +
                '</li>'
            );
        } else {
            paginationContainer.append(
                '<li class="page-item disabled">' +
                    '<a class="page-link" href="javascript:void(0);" aria-label="Previous">' +
                        '<span aria-hidden="true">&laquo;</span>' +
                    '</a>' +
                '</li>'
            );
        }

        for (var i = 1; i <= totalPages; i++) {
            paginationContainer.append(
                '<li class="page-item ' + (i === currentPage ? 'active' : '') + '">' +
                    '<a class="page-link" href="javascript:void(0);" onclick="loadPage(' + i + ')">' + i + '</a>' +
                '</li>'
            );
        }

        if (currentPage < totalPages) {
            paginationContainer.append(
                '<li class="page-item">' +
                    '<a class="page-link" href="javascript:void(0);" onclick="loadPage(' + (currentPage + 1) + ')" aria-label="Next">' +
                        '<span aria-hidden="true">&raquo;</span>' +
                    '</a>' +
                '</li>'
            );
        } else {
            paginationContainer.append(
                '<li class="page-item disabled">' +
                    '<a class="page-link" href="javascript:void(0);" aria-label="Next">' +
                        '<span aria-hidden="true">&raquo;</span>' +
                    '</a>' +
                '</li>'
            );
        }
    }

    @*   function loadPage(pageNumber) {
           console.log(pageNumber);
        updateCityCheckboxes(pageNumber, 3);
    }
});*@

function confirmDelete(Id) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '/Details/Delete',
                type: 'POST',
                data: { Id: Id },
                success: function (response) {
                    Swal.fire('Deleted!', 'The record has been deleted.', 'success');
                    location.reload();
                },
                error: function (xhr, status, error) {
                    Swal.fire('Error!', 'There was a problem deleting the user.', 'error');
                }
            });
        }
    });
    }
    function loadPage(pageNumber) {
        console.log(pageNumber);
        updateCityCheckboxes(pageNumber);
    }
      function updateCityCheckboxes(pageNumber = 1, pageSize = 3) {
           console.log("fuyf"+pageNumber);

        var selectedCities = $('.city-checkbox:checked').map(function () {
            return $(this).val();
        }).get().join(',');

        var searchString = $('#searchName').val();
        var startDate = $('#startDate').val();
        var endDate = $('#endDate').val();

        $.ajax({
            url: '@Url.Action("GetDetails", "Details")',
            type: 'GET',
            data: {
                cityNames: selectedCities,
                searchString: searchString,
                startDate: startDate,
                endDate: endDate,
                pageNumber: pageNumber,
                pageSize: pageSize
            },
            success: function (response) {
                console.log(response);
                $('#td').html(response);
                ("#tb").append(response);

               var tb = $('table tbody');
                tb.empty();

                $.each(response.Det, function (index, detail) {
                   tb.append(
                       '<tr>' +
                         '<td>' + detail.Name + '</td>' +
                         '<td>' + detail.Email + '</td>' +
                         '<td>' + detail.Mobile + '</td>' +
                         '<td>' + detail.StateName + '</td>' +
                          '<td>' + detail.CityName + '</td>' +
                           '<td>' + formatDate(detail.CreatedOn) + '</td>' +
                          '<td>' +
                           '<a href="/Details/Edit/' + detail.Id + '" class="btn btn-warning btn-sm" title="Edit">' +
                             '<i class="bi bi-pencil"></i>' +
                              '</a>' +
                            '<button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(' + detail.Id + ')">' +
                               '<i class="bi bi-trash3-fill"></i>' +
                           '</button>' +
                     '</td>' +
                     '</tr>'
                    );
                });

                updatePagination(response.currentPage, response.TotalPages);
            },
            error: function (xhr, status, error) {
                alert("An error occurred: " + error);
            }
        });
    }

</script>


-------------------------------------****************************----------------------
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
   $(document).ready(function () {
    $('.state-checkbox').on('change', function () {
        var selectedStates = $('.state-checkbox:checked').map(function () {
            return $(this).val();
        }).get().join(',');

        $.ajax({
            url: '@Url.Action("GetCitiesByStates", "Details")',
            type: 'GET',
            data: { stateNames: selectedStates },
            success: function (data) {
                $('.city-container').hide();
                $.each(data, function (index, cityGroup) {
                    var cityContainer = $('#city-container-' + cityGroup.StateName);
                    var checkedCities = cityContainer.find('.city-checkbox:checked').map(function () {
                        return $(this).val();
                    }).get();
                    cityContainer.empty();
                    $.each(cityGroup.Cities, function (index, city) {
                        cityContainer.append(
                            '<label>' +
                                '<input type="checkbox" class="city-checkbox" value="' + city + '" ' + (checkedCities.includes(city) ? 'checked' : '') + ' /> ' + city +
                            '</label><br />'
                        );
                    });
                    cityContainer.show();
                });
                updateCityCheckboxes();
            },
            error: function (xhr, status, error) {
                alert("An error occurred: " + error);
            }
        });
    });

    $(document).on('change', '.city-checkbox', function () {
        updateCityCheckboxes();
    });

    $('#searchName, #startDate, #endDate').on('input change', function () {
        validateDates();
        updateCityCheckboxes();
    });

    function validateDates() {
        var startDate = new Date($('#startDate').val());
        var endDate = new Date($('#endDate').val());

        $('#startDateError').text('');
        $('#endDateError').text('');

        if (startDate && endDate && startDate > endDate) {
            $('#startDateError').text('Start Date cannot be after End Date.');
            $('#endDateError').text('End Date cannot be before Start Date.');
            return false;
        }

        return true;
    }

    function formatDate(dateString) {
        var timestamp = parseInt(dateString.replace(/\/Date\((\d+)\)\//, '$1'));
        var date = new Date(timestamp);
        var day = ("0" + date.getDate()).slice(-2);
        var month = ("0" + (date.getMonth() + 1)).slice(-2);
        var year = date.getFullYear();
        return day + '-' + month + '-' + year;
    }



       function updatePagination(currentPage, totalPages) {
           console.log(currentPage);
        var paginationContainer = $('.pagination');
        paginationContainer.empty();

        if (currentPage > 1) {
            paginationContainer.append(
                '<li class="page-item">' +
                    '<a class="page-link" href="javascript:void(0);" onclick="loadPage(' + (currentPage - 1) + ')" aria-label="Previous">' +
                        '<span aria-hidden="true">&laquo;</span>' +
                    '</a>' +
                '</li>'
            );
        } else {
            paginationContainer.append(
                '<li class="page-item disabled">' +
                    '<a class="page-link" href="javascript:void(0);" aria-label="Previous">' +
                        '<span aria-hidden="true">&laquo;</span>' +
                    '</a>' +
                '</li>'
            );
        }

        for (var i = 1; i <= totalPages; i++) {
            paginationContainer.append(
                '<li class="page-item ' + (i === currentPage ? 'active' : '') + '">' +
                    '<a class="page-link" href="javascript:void(0);" onclick="loadPage(' + i + ')">' + i + '</a>' +
                '</li>'
            );
        }

        if (currentPage < totalPages) {
            paginationContainer.append(
                '<li class="page-item">' +
                    '<a class="page-link" href="javascript:void(0);" onclick="loadPage(' + (currentPage + 1) + ')" aria-label="Next">' +
                        '<span aria-hidden="true">&raquo;</span>' +
                    '</a>' +
                '</li>'
            );
        } else {
            paginationContainer.append(
                '<li class="page-item disabled">' +
                    '<a class="page-link" href="javascript:void(0);" aria-label="Next">' +
                        '<span aria-hidden="true">&raquo;</span>' +
                    '</a>' +
                '</li>'
            );
        }
    }


});

function confirmDelete(Id) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '/Details/Delete',
                type: 'POST',
                data: { Id: Id },
                success: function (response) {
                    Swal.fire('Deleted!', 'The record has been deleted.', 'success');
                    location.reload();
                },
                error: function (xhr, status, error) {
                    Swal.fire('Error!', 'There was a problem deleting the user.', 'error');
                }
            });
        }
    });
}
    function loadPage(pageNumber) {
        console.log(pageNumber);
        updateCityCheckboxes(pageNumber);
      //  updatePagination(response.currentPage, response.TotalPages);
    }
      function updateCityCheckboxes(pageNumber = 1, pageSize = 3) {
           console.log("fuyf"+pageNumber);

        var selectedCities = $('.city-checkbox:checked').map(function () {
            return $(this).val();
        }).get().join(',');

        var searchString = $('#searchName').val();
        var startDate = $('#startDate').val();
        var endDate = $('#endDate').val();

        $.ajax({
            url: '@Url.Action("GetDetails", "Details")',
            type: 'GET',
            data: {
                cityNames: selectedCities,
                searchString: searchString,
                startDate: startDate,
                endDate: endDate,
                pageNumber: pageNumber,
                pageSize: pageSize
            },
            success: function (response) {
                console.log(response);
                $('#tb').html(response);
                if (response && response.model && Array.isArray(response.model)) {
                    $.each(response.model, function (index, detail) {
                        $('#tb').append(
                            '<tr>' +
                            '<td>' + detail.Name + '</td>' +
                            '<td>' + detail.Email + '</td>' +
                            '<td>' + detail.Mobile + '</td>' +
                            '<td>' + detail.StateName + '</td>' +
                            '<td>' + detail.CityName + '</td>' +
                            '<td>' + formatDate(detail.CreatedOn) + '</td>' +
                            '<td>' +
                            '<a href="/Details/Edit/' + detail.Id + '" class="btn btn-warning btn-sm" title="Edit">' +
                            '<i class="bi bi-pencil"></i>' +
                            '</a>' +
                            '<button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(' + detail.Id + ')">' +
                            '<i class="bi bi-trash3-fill"></i>' +
                            '</button>' +
                            '</td>' +
                            '</tr>'
                        );
                    });
                }

                updatePagination(response.currentPage, response.TotalPages);
            },
            error: function (xhr, status, error) {
                alert("An error occurred: " + error);
            }
        });
    }
</script>


-----------------------------in this above code if i click pagination link pagenumber 2 thenonly pagenumber will reload but not whole page reload 
and if i click statecheckboxes city checkboxes will come and then i click city checkbixes cities corresponding data will retrive id=tb table and if i search functionality between dataes data will fecth in tb id and
selected serach with name 
-------------------*******************************************---------------------------------------
@model List<task5.Models.Details>

@{
    ViewBag.Title = "GetDetails";
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
}

<h2>GetDetails</h2>
@Html.ActionLink("Create", "Index")

@TempData["Success"]

<div class="container">
    <div class="row">
        <div class="col-md-6 col-lg-4 mx-auto">
            <div class="form-group">
                <label for="searchName">Search by Name:</label>
                <input type="text" class="form-control" id="searchName" placeholder="Enter name">
            </div>
            <div class="form-group">
                <label for="startDate">Start Date:</label>
                <input type="date" class="form-control" id="startDate">
                <div class="error" id="startDateError"></div>
            </div>
            <div class="form-group">
                <label for="endDate">End Date:</label>
                <input type="date" class="form-control" id="endDate">
                <div class="error" id="endDateError"></div>
            </div>
        </div>
    </div>
    <div id="results" class="mt-3"></div>
</div>

<h4>States</h4>
<div class="state-container">
    @foreach (var state in ViewBag.States)
    {
        <div class="state-item">
            <label class="state-label">
                <input type="checkbox" class="state-checkbox" value="@state.StateName" /> @state.StateName
            </label>
        </div>
        <div class="city-container" id="city-container-@state.StateName" style="display:none; margin-left: 20px;">
            <!-- Cities will be populated here via AJAX -->
        </div>
    }
</div>

<div class="container mt-4" id="tb">
    <div class="gridContainer">
        <div id="grid"></div>
        <table class="table table-bordered table-striped" style="width: 100%;">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Mobile</th>
                    <th>State</th>
                    <th>City</th>
                    <th>Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.Name</td>
                        <td>@user.Email</td>
                        <td>@user.Mobile</td>
                        <td>@user.StateName</td>
                        <td>@user.CityName</td>
                        <td>@user.CreatedOn.ToString("dd/MM/yyyy")</td>
                        <td>
                            <a href="@Url.Action("Edit", new { id = user.Id })" class="btn btn-warning btn-sm" title="Edit">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(@user.Id)">
                                <i class="bi bi-trash3-fill"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="pagination-container">
        <div id="pagination"></div>
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-end">
                @if (ViewBag.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="loadPage(@(ViewBag.CurrentPage - 1))" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="#" onclick="loadPage(@i)">@i</a>
                    </li>
                }

                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="loadPage(@(ViewBag.CurrentPage))" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
<style>
    .error {
        color: red;
        font-size: 0.875em;
        margin-top: 0.25em;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
   $(document).ready(function () {
    $('.state-checkbox').on('change', function () {
        var selectedStates = $('.state-checkbox:checked').map(function () {
            return $(this).val();
        }).get().join(',');

        $.ajax({
            url: '@Url.Action("GetCitiesByStates", "Details")',
            type: 'GET',
            data: { stateNames: selectedStates },
            success: function (data) {
                $('.city-container').hide();
                $.each(data, function (index, cityGroup) {
                    var cityContainer = $('#city-container-' + cityGroup.StateName);
                    var checkedCities = cityContainer.find('.city-checkbox:checked').map(function () {
                        return $(this).val();
                    }).get();
                    cityContainer.empty();
                    $.each(cityGroup.Cities, function (index, city) {
                        cityContainer.append(
                            '<label>' +
                                '<input type="checkbox" class="city-checkbox" value="' + city + '" ' + (checkedCities.includes(city) ? 'checked' : '') + ' /> ' + city +
                            '</label><br />'
                        );
                    });
                    cityContainer.show();
                });
                updateCityCheckboxes();
            },
            error: function (xhr, status, error) {
                alert("An error occurred: " + error);
            }
        });
    });

    $(document).on('change', '.city-checkbox', function () {
        updateCityCheckboxes();
    });

    $('#searchName, #startDate, #endDate').on('input change', function () {
        validateDates();
        updateCityCheckboxes();
    });

    function validateDates() {
        var startDate = new Date($('#startDate').val());
        var endDate = new Date($('#endDate').val());

        $('#startDateError').text('');
        $('#endDateError').text('');

        if (startDate && endDate && startDate > endDate) {
            $('#startDateError').text('Start Date cannot be after End Date.');
            $('#endDateError').text('End Date cannot be before Start Date.');
            return false;
        }

        return true;
    }

    function formatDate(dateString) {
        var timestamp = parseInt(dateString.replace(/\/Date\((\d+)\)\//, '$1'));
        var date = new Date(timestamp);
        var day = ("0" + date.getDate()).slice(-2);
        var month = ("0" + (date.getMonth() + 1)).slice(-2);
        var year = date.getFullYear();
        return day + '-' + month + '-' + year;
    }



       function updatePagination(currentPage, totalPages) {
           console.log(currentPage);
        var paginationContainer = $('.pagination');
        paginationContainer.empty();

     @*   if (currentPage > 1) {
            paginationContainer.append(
                '<li class="page-item">' +
                    '<a class="page-link" href="javascript:void(0);" onclick="loadPage(' + (currentPage - 1) + ')" aria-label="Previous">' +
                        '<span aria-hidden="true">&laquo;</span>' +
                    '</a>' +
                '</li>'
            );
        } else {
            paginationContainer.append(
                '<li class="page-item disabled">' +
                    '<a class="page-link" href="javascript:void(0);" aria-label="Previous">' +
                        '<span aria-hidden="true">&laquo;</span>' +
                    '</a>' +
                '</li>'
            );
        }*@

        for (var i = 1; i <= totalPages; i++) {
            paginationContainer.append(
                '<li class="page-item ' + (i === currentPage ? 'active' : '') + '">' +
                    '<a class="page-link" href="javascript:void(0);" onclick="loadPage(' + i + ')">' + i + '</a>' +
                '</li>'
            );
        }

     @*   if (currentPage < totalPages) {
            paginationContainer.append(
                '<li class="page-item">' +
                    '<a class="page-link" href="javascript:void(0);" onclick="loadPage(' + (currentPage + 1) + ')" aria-label="Next">' +
                        '<span aria-hidden="true">&raquo;</span>' +
                    '</a>' +
                '</li>'
            );
        } else {
            paginationContainer.append(
                '<li class="page-item disabled">' +
                    '<a class="page-link" href="javascript:void(0);" aria-label="Next">' +
                        '<span aria-hidden="true">&raquo;</span>' +
                    '</a>' +
                '</li>'
            );
        }*@
    }


});

function confirmDelete(Id) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '/Details/Delete',
                type: 'POST',
                data: { Id: Id },
                success: function (response) {
                    Swal.fire('Deleted!', 'The record has been deleted.', 'success');
                    location.reload();
                },
                error: function (xhr, status, error) {
                    Swal.fire('Error!', 'There was a problem deleting the user.', 'error');
                }
            });
        }
    });
}
    function loadPage(pageNumber) {
        console.log(pageNumber);
        updateCityCheckboxes(pageNumber);
    
    }
    function updateCityCheckboxes(pageNumber = 1, pageSize = 3) {

        console.log("fuyf" + pageNumber);
       // if (!validateDates()) return;

        var selectedCities = $('.city-checkbox:checked').map(function () {
            return $(this).val();
        }).get().join(',');

        var searchString = $('#searchName').val();
        var startDate = $('#startDate').val();
        var endDate = $('#endDate').val();

        $.ajax({
            url: '@Url.Action("GetDetails", "Details")',
            type: 'GET',
            data: {
                cityNames: selectedCities,
                searchString: searchString,
                startDate: startDate,
                endDate: endDate,
                pageNumber: pageNumber,
                pageSize: pageSize
            },
            success: function (response) {
                console.log(response);
                $('#tb').html(response);
                if (response && response.model && Array.isArray(response.model)) {
                   // $.each(response.Det, function (index, detail) {
                    $.each(response.model, function (index, detail) {
                        $('#tb').append(
                            '<tr>' +
                            '<td>' + detail.Name + '</td>' +
                            '<td>' + detail.Email + '</td>' +
                            '<td>' + detail.Mobile + '</td>' +
                            '<td>' + detail.StateName + '</td>' +
                            '<td>' + detail.CityName + '</td>' +
                            '<td>' + formatDate(detail.CreatedOn) + '</td>' +
                            '<td>' +
                            '<a href="/Details/Edit/' + detail.Id + '" class="btn btn-warning btn-sm" title="Edit">' +
                            '<i class="bi bi-pencil"></i>' +
                            '</a>' +
                            '<button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(' + detail.Id + ')">' +
                            '<i class="bi bi-trash3-fill"></i>' +
                            '</button>' +
                            '</td>' +
                            '</tr>'
                        );
                    });
                }

                updatePagination(response.currentPage, response.TotalPages);
            },
            error: function (xhr, status, error) {
                alert("An error occurred: " + error);
            }
        });
    }
</script>


----------------------******************************************------------------------------------------------
@model List<task5.Models.Details>

@{
    ViewBag.Title = "GetDetails";
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    
    <link href="https://cdn.datatables.net/v/dt/dt-2.1.5/datatables.min.css" rel="stylesheet">

  

}

<h2>GetDetails</h2>
@Html.ActionLink("Create", "Index")

@TempData["Success"]

<div class="container">
    <div class="row">
        <div class="col-md-6 col-lg-4 mx-auto">
            <div class="form-group">
                <label for="searchName">Search by Name:</label>
                <input type="text" class="form-control" id="searchName" placeholder="Enter name">
            </div>
            <div class="form-group">
                <label for="startDate">Start Date:</label>
                <input type="date" class="form-control" id="startDate">
                <div class="error" id="startDateError"></div>
            </div>
            <div class="form-group">
                <label for="endDate">End Date:</label>
                <input type="date" class="form-control" id="endDate">
                <div class="error" id="endDateError"></div>
            </div>
        </div>
    </div>

    <div class="state-container">
        @foreach (var state in ViewBag.States)
        {
            <div class="state-item">
                <label class="state-label">
                    <input type="checkbox" class="state-checkbox" value="@state.StateName" /> @state.StateName
                </label>
                <div class="city-container" id="city-container-@state.StateName" style="display:none; margin-left: 20px;">
                    <!-- Cities will be populated dynamically -->
                </div>
            </div>
        }
    </div>

    <div class="container mt-4">
        <table class="table table-bordered table-striped" id="example1">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Mobile</th>
                    <th>State</th>
                    <th>City</th>
                    <th>Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<style>
    .error {
        color: red;
        font-size: 0.875em;
        margin-top: 0.25em;
    }
</style>

@section scripts{


    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdn.datatables.net/v/dt/dt-2.1.5/datatables.min.css" rel="stylesheet">

    <script src="https://cdn.datatables.net/v/dt/dt-2.1.5/datatables.min.js"></script>

    <script src="https://cdn.datatables.net/v/dt/dt-2.1.5/datatables.min.js"></script>

    <script>
        $(document).ready(function () {
            var table = $('#example1').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "@Url.Action("GetDetails", "Details")",
                    "type": "GET",
                    "data": function (d) {
                        d.searchString = $('#searchName').val();
                        d.startDate = $('#startDate').val();
                        d.endDate = $('#endDate').val();
                        // Additional data if needed
                    }
                },
                "columns": [
                    { "data": "Name" },
                    { "data": "Email" },
                    { "data": "Mobile" },
                    { "data": "StateName" },
                    { "data": "CityName" },
                    { "data": "CreatedOn" },
                    {
                        "data": "Id",
                        "render": function (data) {
                            return `<a href="/Details/Edit/${data}" class="btn btn-warning btn-sm" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(${data})">
                                        <i class="bi bi-trash3-fill"></i>
                                    </button>`;
                        }
                    }
                ],
                "language": {
                    "emptyTable": "No records found.",
                    "processing": '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span>'
                }
            });

            $('#searchName, #startDate, #endDate').on('input change', function () {
                table.ajax.reload();
            });

            $('.state-checkbox').on('change', function () {
                var selectedStates = $('.state-checkbox:checked').map(function () {
                    return $(this).val();
                }).get().join(',');

                $.ajax({
                    url: '@Url.Action("GetCitiesByStates", "Details")',
                    type: 'GET',
                    data: { stateNames: selectedStates },
                    success: function (data) {
                        $('.city-container').hide();
                        $.each(data, function (index, cityGroup) {
                            var cityContainer = $('#city-container-' + cityGroup.StateName);
                            cityContainer.empty();
                            $.each(cityGroup.Cities, function (index, city) {
                                cityContainer.append(
                                    '<label>' +
                                        '<input type="checkbox" class="city-checkbox" value="' + city + '" /> ' + city +
                                    '</label><br />'
                                );
                            });
                            cityContainer.show();
                        });
                        table.ajax.reload();
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + error);
                    }
                });
            });

            $(document).on('change', '.city-checkbox', function () {
                table.ajax.reload();
            });
        });

        function confirmDelete(Id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Details/Delete',
                        type: 'POST',
                        data: { Id: Id },
                        success: function () {
                            Swal.fire('Deleted!', 'The record has been deleted.', 'success');
                            $('#example1').DataTable().ajax.reload();
                        },
                        error: function (xhr, status, error) {
                            Swal.fire('Error!', 'There was a problem deleting the user.', 'error');
                        }
                    });
                }
            });
        }
    </script>
}


